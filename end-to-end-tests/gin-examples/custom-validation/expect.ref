--- a/server.go
+++ b/server.go
@@ -7,6 +7,8 @@
 	"github.com/gin-gonic/gin"
 	"github.com/gin-gonic/gin/binding"
 	"github.com/go-playground/validator/v10"
+	"github.com/newrelic/go-agent/v3/integrations/nrgin"
+	"github.com/newrelic/go-agent/v3/newrelic"
 )
 
 // Booking contains binded and validated data.
@@ -27,18 +29,29 @@
 }
 
 func main() {
+	NewRelicAgent, err := newrelic.NewApplication(newrelic.ConfigFromEnvironment())
+	if err != nil {
+		panic(err)
+	}
+
 	route := gin.Default()
 
+	route.Use(nrgin.Middleware(NewRelicAgent))
+
 	if v, ok := binding.Validator.Engine().(*validator.Validate); ok {
 		v.RegisterValidation("bookabledate", bookableDate)
 	}
 
 	route.GET("/bookable", getBookable)
 	route.Run(":8085")
+
+	NewRelicAgent.Shutdown(5 * time.Second)
 }
 
 func getBookable(c *gin.Context) {
 	var b Booking
+	// NR WARN: Unchecked Error, please consult New Relic documentation on error capture
+	// https://docs.newrelic.com/docs/apm/agents/go-agent/api-guides/guide-using-go-agent-api/#errors
 	if err := c.ShouldBindWith(&b, binding.Query); err == nil {
 		c.JSON(http.StatusOK, gin.H{"message": "Booking dates are valid!"})
 	} else {
